---
- name: Update apt cache
  become: true
  apt: update_cache=yes cache_valid_time=3600

- name: Install required system packages
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - apache2
      - python3-pymysql
      - mysql-server
      - php7.2-mysql
      - php7.2
      - libapache2-mod-php7.2
      - php7.2-gd
      - php7.2-ssh2
  become: yes

#mysql

- name: Ensure mysql is running and starts on boot
  service:
    name: mysql
    state: started
    enabled: yes
  become: yes

- name: Ensure mysql root password is updated for all root accounts
  mysql_user:
    name: root
    host: "{{ item }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    password: "{{ mysql.root_password }}"
    priv: '*.*:ALL,GRANT'
    check_implicit_admin: yes
  with_items:
    - "{{ service_hosts[0].ip_address }}"
    - 127.0.0.1
    - ::1
    - localhost
  become: yes
  notify:
    - restart mysql

- name: Create `/root/.my.cnf` with root password credentials
  template:
    src:  my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    mode: 0600
  become: yes
  notify:
    - restart mysql

- name: Create wordpress mysql database
  become: true
  mysql_db:
    name: "{{ mysql.wp_db }}"
    state: present

- name: Create mysql user
  mysql_user:
    name: "{{ mysql.wp_user }}"
    password: "{{ mysql.wp_password }}"
    priv: "*.*:ALL"
  become: yes

- name: Ensure wp user is updated for all accounts
  mysql_user:
    name: "{{ mysql.wp_user }}"
    host: "{{ item }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    password: "{{ mysql.wp_password }}"
    priv: "*.*:ALL"
    check_implicit_admin: yes
  with_items:
    - "{{ service_hosts[0].ip_address }}"
    - 127.0.0.1
    - ::1
    - localhost
  become: yes
  notify:
    - restart mysql

- name: Create ftp root directory
  file:
    path: "/var/www/ftp"
    state: directory
    mode: a-w
    owner: nobody
    group: nogroup
  register: ftp_root_dir
  become: yes

#user setup

- name: Add group for the user
  group:
    name: "{{ wp_unix_group }}"
  become: yes

- name: Add unix user
  user:
    name: "{{ wp_unix_user }}"
    password:  "{{ wp_unix_password | password_hash('sha512') }}"
    home: "{{ ftp_root_dir.path }}/{{ wp_unix_user }}"
    group: "{{ wp_unix_group }}"
    groups:
      - "{{ wp_unix_group }}"
      - "www-data" # apache
  become: yes

- name: Ensure home directory ownership
  file:
    path: "{{ ftp_root_dir.path }}/{{ wp_unix_user }}"
    state: directory
    mode: 0755
    owner: "{{ wp_unix_user }}"
    group: "{{ wp_unix_group }}"
    recurse: yes
  register: home_dir
  become: yes

#ftp setup

- name: Install vsftpd
  apt:
    name: vsftpd
    state: present
  become: yes

- name: Create self-signed certificate
  command: >
    openssl req -x509 -nodes -subj '/CN={{ cname }}/O=Maudes LTD./C=US' -days 365 -newkey rsa:2048 -sha256 -keyout {{ vsftpd.self_signed_key }} -out {{ vsftpd.self_signed_cert }} creates={{ vsftpd.self_signed_cert }}
  become: yes

- name: Modify vsftpd settings
  lineinfile:
    backup: yes
    dest: "/etc/vsftpd.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertbefore: BOF
  with_items:
    - { regexp: '^(#?)chroot_local_user=', line: 'chroot_local_user=YES' }
    - { regexp: '^(#?)local_enable=', line: 'local_enable=YES' }
    - { regexp: '^(#?)write_enable=YES', line: 'write_enable=YES' }
    - { regexp: '^(#?)user_sub_token=', line: 'user_sub_token=$USER' }
    - { regexp: '^(#?)local_root=', line: 'local_root=/var/www/ftp' }
    - { regexp: '^(#?)userlist_enable=', line: 'userlist_enable=YES' }
    - { regexp: '^(#?)userlist_file=/etc/vsftpd.userlist', line: 'userlist_file=/etc/vsftpd.userlist' }
    - { regexp: '^(#?)userlist_deny=NO', line: 'userlist_deny=NO' }
    - { regexp: '^(#?)rsa_cert_file=', line: 'rsa_cert_file={{ vsftpd.self_signed_cert }}' }
    - { regexp: '^(#?)rsa_private_key_file=', line: 'rsa_private_key_file={{ vsftpd.self_signed_key }}' }
    - { regexp: '^(#?)ssl_enable=', line: 'ssl_enable=YES' }
    - { regexp: '^(#?)allow_anon_ssl=', line: 'allow_anon_ssl=NO' }
    - { regexp: '^(#?)force_local_data_ssl=', line: 'force_local_data_ssl=YES' }
    - { regexp: '^(#?)force_local_logins_ssl=', line: 'force_local_logins_ssl=YES' }
    - { regexp: '^(#?)ssl_tlsv1=', line: 'ssl_tlsv1=YES' }
    - { regexp: '^(#?)ssl_sslv2=', line: 'ssl_sslv2=NO' }
    - { regexp: '^(#?)ssl_sslv2=', line: 'ssl_sslv2=NO' }
  become: yes
  notify:
    - restart vsftpd

- name: Add new user to vsftpd.userlist
  lineinfile:
    path: /etc/vsftpd.userlist
    line: "{{ wp_unix_user }}"
    create: yes
  become: yes
  notify:
    - restart vsftpd

#firewall

- name: Allow firewall access to ftp/ssh/mysql ports
  ufw:
    rule: allow
    port: '{{ item }}'
    proto: tcp
  with_items:
    - 20
    - 21
    - 22
    - 10000:11000
    - 80
    - 3306
  become: yes
  notify:
    - restart vsftpd

# Wordpress installation

- name: Download wordpress
  get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz
    validate_certs: no

- name: Extract wordpress
  unarchive: src=/tmp/wordpress.tar.gz dest={{ home_dir.path }} copy=no
  become: yes

- name: Ensure ownership of wordpress directory
  file:
    path: "{{ home_dir.path }}/wordpress"
    mode: 0755
    owner: "{{ wp_unix_user }}"
    group: "{{ wp_unix_group }}"
    recurse: yes
  register: wordpress_dir
  become: yes

- name: Ensure ownership of wp-content directory
  file:
    path: "{{ wordpress_dir.path }}/wp-content"
    mode: 0775
    owner: "{{ wp_unix_user }}"
    group: "www-data"
  become: yes

- name: Use sample config file
  command: mv {{ wordpress_dir.path }}/wp-config-sample.php {{ wordpress_dir.path }}/wp-config.php creates={{ wordpress_dir.path }}/wp-config.php
  become: yes

- name: Update wordpress config file
  lineinfile:
    dest: "{{ wordpress_dir.path }}/wp-config.php"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - {'regexp': "define\\(\\s*'DB_NAME'\\s*,\\s*'(.)+'\\s*\\);", 'line': "define('DB_NAME', '{{ mysql.wp_db }}');"}
    - {'regexp': "define\\(\\s*'DB_USER'\\s*,\\s*'(.)+'\\s*\\);", 'line': "define('DB_USER', '{{ mysql.wp_user }}');"}
    - {'regexp': "define\\(\\s*'DB_PASSWORD'\\s*,\\s*'(.)+'\\s*\\);", 'line': "define('DB_PASSWORD', '{{ mysql.wp_password }}');"}
  become: yes
  notify:
    - restart apache

- name: Update default Apache site
  become: yes
  lineinfile:
    dest=/etc/apache2/sites-enabled/000-default.conf
    regexp="(.)+DocumentRoot /var/www/html"
    line="DocumentRoot {{ wordpress_dir.path }}"
  notify:
    - restart apache



